<?php // $Id: yamli.module,v 1.1.2.1 2010/03/22 10:10:54 rashad612 Exp $

/**
 * Implementation of hook_help().
 */
function yamli_help($path, $arg) {
  switch ($path) {
		case 'admin/help#yamli':
			return '<p>'.t('Yamliâ€™s technology allows users to type Arabic using Latin characters. By licensing Yamli, you can use Yamli to allow your users to easily type Arabic in all the HTML forms on your website, including email, forums, search boxes, comment forms, etc..').'</p>';
	}
}// end function yamli_help;

/**
 * Implementation of hook_perm().
 *
 */
function yamli_perm() {
	return array('administer yamli');
}// end function yamli_perm;


/**
 * Implementation of hook_menu().
 */
function yamli_menu() {
	$items['admin/settings/yamli'] = array(
	  'title' => t('Yamli Settings'),
		'description' => t('Configure Yamli\'s options'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('yamli_admin'),
		'access arguments' => array('administer yamli')
	);
	return $items;
}// end function yamli_menu;


/**
 * function yamli_admin(). to display admin settings form for Yamli
 */
function yamli_admin() {
  $settings = yamli_get_settings();
  
  $form['yamli_api_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Yamli API path'),
    '#size' => 50,
    '#maxlength' => 255,
    '#default_value' => $settings['yamli_api_path']
  );
  
	$form['ids_and_classes'] = array(
		'#type' => 'fieldset',
		'#title' => t('IDs and classes'),
		'#collapsible' => TRUE,
		'#collapsed' => FALSE
	);
	
	$form['ids_and_classes']['yamli_ids'] = array(
		'#type' => 'textarea',
		'#title' => t('IDs'),
		'#description' => t('Enter the IDs of textareas or textfields, where you want Yamli to work with. One ID per line'),
		'#default_value' => $settings['yamli_ids']
	);
  
	$form['ids_and_classes']['yamli_classes'] = array(
		'#type' => 'textarea',
		'#title' => t('Classes'),
		'#description' => t('Enter the class names of textareas or textfields, where you want Yamli to work with. One class per line'),
		'#default_value' => $settings['yamli_classes']
	);
	
	$form['page_visibility_settings'] = array(
	  '#type' => 'fieldset',
	  '#title' => t('Page Visibility'),
	  '#collapsible' => TRUE,
	  '#collapsed' => FALSE,
	);
	
	$radio_options = array(t('Show on every page except the listed pages.'), t('Show on only the listed pages.'));
	$description = t("Enter one page per line as Drupal paths. The '*' character is a wildcard. Example paths are %blog for the blog page and %blog-wildcard for every personal blog. %front is the front page.", array('%blog' => 'blog', '%blog-wildcard' => 'blog/*', '%front' => '<front>'));
	
	$form['page_visibility_settings']['yamli_page_visibility'] = array(
	  '#type' => 'radios',
	  '#title' => t('Enable Yamli on specific pages'),
	  '#options' => $radio_options,
	  '#default_value' => $settings['yamli_page_visibility']
	);
	
	$form['page_visibility_settings']['yamli_pages'] = array(
	  '#type' => 'textarea',
	  '#title' => t('Pages'),
	  '#description' => $description,
	  '#default_value' => $settings['yamli_pages']
	);
	
	$form['yamli_global_settings'] = array(
	  '#type' => 'fieldset',
	  '#title' => t('Customize Yamli'),
	  '#collapsible' => TRUE,
	  '#collapsed' => TRUE,
	  '#description' => t('For more details about Yamli Settings, please visit <a href="@link">Yamli API Documentation</a>', array('@link' => url('http://www.yamli.com/api/docs', array('absolute' => TRUE))))
	);
	
	$yamli_lang_options = array('en' => t('English'), 'ar' => t('Arabic'), 'fr' => t('French'));
	
	$form['yamli_global_settings']['yamli_setting_uiLanguage'] = array(
	  '#type' => 'select',
	  '#title' => t('User Interface Language'),
	  '#options' => $yamli_lang_options,
	  '#default_value' => $settings['yamli_global_settings']['yamli_setting_uiLanguage']
	);
	
	$yamli_settingsPlacement_options = array(
	  'bottomRight' => t('Bottom Right'),
	  'bottomLeft' =>  t('Bottom Left'),
	  'topRight' => t('Top Right'),
	  'topLeft' => t('Top Left'),
	  'rightTop' => t('Right Top'),
	  'leftTop' => t('Left Top'),
	  'rightBottom' => t('Right Bottom'),
	  'leftBottom' => t('Left Bottom'),
	  'rightCenter' => t('Right Center'),
	  'leftCenter' => t('Left Center'),
	  'inside' => t('Inside'),
	  'hide' => t('Hide')
	);
	
	$form['yamli_global_settings']['yamli_setting_settingsPlacement'] = array(
	  '#type' => 'select',
	  '#title' => t('Settings Placement'),
	  '#options' => $yamli_settingsPlacement_options,
	  '#default_value' => $settings['yamli_global_settings']['yamli_setting_settingsPlacement']
	);
	
	$form['yamli_global_settings']['yamli_setting_settingsXOffset'] = array(
	  '#type' => 'textfield',
	  '#title' => t('X Offset'),
	  '#maxlength' => 10,
	  '#size' => 3,
	  '#default_value' => $settings['yamli_global_settings']['yamli_setting_settingsXOffset'],
	  '#description' => t('Examples: 0, 10, -10')
	);
	
	$form['yamli_global_settings']['yamli_setting_settingsYOffset'] = array(
	  '#type' => 'textfield',
	  '#title' => t('Y Offset'),
	  '#maxlength' => 10,
	  '#size' => 3,
	  '#default_value' => $settings['yamli_global_settings']['yamli_setting_settingsYOffset'],
	  '#description' => t('Examples: 0, 10, -10')
	);
	
	$yamli_startMode_options = array(
	  'onOrUserDefault' => t('On Or User Default'),
	  'offOrUserDefault' => t('Off Or User Default'),
	  'on' => t('On'),
	  'off' => t('Off')
	);
	
	$form['yamli_global_settings']['yamli_setting_startMode'] = array(
	  '#type' => 'select',
	  '#title' => t('Start Mode'),
	  '#options' => $yamli_startMode_options,
	  '#default_value' => $settings['yamli_global_settings']['yamli_setting_startMode'],
	);
	
	$form['yamli_global_settings']['yamli_setting_showTutorialLink'] = array(
	  '#type' => 'radios',
	  '#title' => t('Show Tutorial Link'),
	  '#options' => array(0 => t('False'), 1 => t('True')),
	  '#default_value' => $settings['yamli_global_settings']['yamli_setting_showTutorialLink']
	);
	
	$form['yamli_global_settings']['yamli_setting_showDirectionLink'] = array(
	  '#type' => 'radios',
	  '#title' => t('Show Direction Link'),
	  '#options' => array(0 => t('False'), 1 => t('True')),
	  '#default_value' => $settings['yamli_global_settings']['yamli_setting_showDirectionLink']
	);
	
	$form['yamli_global_settings']['yamli_setting_uiFontFamily'] = array(
	  '#type' => 'textfield',
	  '#title' => t('User Interface Font'),
	  '#size' => 15,
	  '#maxlength' => 255,
	  '#default_value' => $settings['yamli_global_settings']['yamli_setting_uiFontFamily']
	);
	
	$form['yamli_global_settings']['yamli_setting_settingsColor'] = array(
	  '#type' => 'textfield',
	  '#title' => t('Settings Color'),
	  '#size' => 7,
	  '#maxlength' => 7,
	  '#default_value' => $settings['yamli_global_settings']['yamli_setting_settingsColor']
	);
	
	$form['yamli_global_settings']['yamli_setting_settingsLinkColor'] = array(
	  '#type' => 'textfield',
	  '#title' => t('Settings Link Color'),
	  '#size' => 7,
	  '#maxlength' => 7,
	  '#default_value' => $settings['yamli_global_settings']['yamli_setting_settingsLinkColor']
	);
	
  $form['yamli_global_settings']['yamli_setting_zIndexBase'] = array(
	  '#type' => 'textfield',
	  '#title' => t('Z Index Base'), 
	  '#size' => 7,
	  '#maxlength' => 7,
	  '#default_value' => $settings['yamli_global_settings']['yamli_setting_zIndexBase']
	);
	
	return system_settings_form($form);
}// end function yamli_admin;


/**
 * function yamli_get_settings()
 * get all Yamli settings
 * @return mixed
 */

function yamli_get_settings() {
  $settings = array(
    'yamli_api_path' => variable_get('yamli_api_path', 'http://api.yamli.com/js/yamli_api.js'),
    'yamli_ids' => variable_get('yamli_ids', 'edit-title'),
    'yamli_classes' => variable_get('yamli_classes', ''),
    'yamli_page_visibility' => variable_get('yamli_page_visibility', 0),
    'yamli_pages' => variable_get('yamli_pages', ''),
    'yamli_global_settings' => array(
  	  'yamli_setting_uiLanguage' => variable_get('yamli_setting_uiLanguage', 'en'),
  	  'yamli_setting_settingsPlacement' => variable_get('yamli_setting_settingsPlacement', 'Bottom Right'),
  	  'yamli_setting_settingsXOffset' => variable_get('yamli_setting_settingsXOffset', 0),
  	  'yamli_setting_settingsYOffset' => variable_get('yamli_setting_settingsYOffset', 0),
  	  'yamli_setting_startMode' => variable_get('yamli_setting_startMode', 'onOrUserDefault'),
  	  'yamli_setting_showTutorialLink' => variable_get('yamli_setting_showTutorialLink', true),
  	  'yamli_setting_showDirectionLink' => variable_get('yamli_setting_showDirectionLink', true),
  	  'yamli_setting_uiFontFamily' => variable_get('yamli_setting_uiFontFamily', 'sans-serif'),
  	  'yamli_setting_settingsColor' => variable_get('yamli_setting_settingsColor', '#000000'),
  	  'yamli_setting_settingsLinkColor' => variable_get('yamli_setting_settingsLinkColor', '#112ABB'),
  	  'yamli_setting_zIndexBase' => variable_get('yamli_setting_zIndexBase', 1000)
	  )
  );
  
  return $settings;
}// end function yamli_get_settings;


/**
 * Helper function _yamli_page_visibility().
 * To check if Yamli should work in this page or not
 * 
 * @return boolean
 */
function _yamli_page_visibility() {
  $settings = yamli_get_settings();
	if ($settings['yamli_pages']) {
	  $path = drupal_get_path_alias($_GET['q']);
		$page_match = drupal_match_path($path, $settings['yamli_pages']);
		if ($path != $_GET['q']) {
		  $page_match = $page_match || drupal_match_path($_GET['q'], $settings['yamli_pages']);
		}
		$page_match = !($settings['yamli_page_visibility'] xor $page_match);
	}
	else{
	  $page_match = TRUE;
	}
	return $page_match;
}// end function _yamli_page_visibility;

/**
 * Implementation of hook_footer().
 */
function yamli_footer($main = 0) {
  global $user;
	if (_yamli_page_visibility()) {
	  $settings = yamli_get_settings();
	  $yamli_api_js = $settings['yamli_api_path'];
	  $output = "<!-- YAMLI CODE START -->\n";
    $output .= "<script type=\"text/javascript\" src=\"$yamli_api_js\"></script>\n";
   
  	$ids = explode("\r\n", $settings['yamli_ids']);
  	
  	$classes = explode("\r\n", $settings['yamli_classes']);
  	
  	$global_settings = array(
  	  'uiLanguage' => $settings['yamli_global_settings']['yamli_setting_uiLanguage'],
  	  'settingsPlacement' => $settings['yamli_global_settings']['yamli_setting_settingsPlacement'],
  	  'settingsXOffset' => intval($settings['yamli_global_settings']['yamli_setting_settingsXOffset']),
  	  'settingsYOffset' => intval($settings['yamli_global_settings']['yamli_setting_settingsYOffset']),
  	  'startMode' => $settings['yamli_global_settings']['yamli_setting_startMode'],
  	  'showTutorialLink' => (bool)$settings['yamli_global_settings']['yamli_setting_showTutorialLink'],
  	  'showDirectionLink' => (bool)$settings['yamli_global_settings']['yamli_setting_showDirectionLink'],
  	  'uiFontFamily' => $settings['yamli_global_settings']['yamli_setting_uiFontFamily'],
  	  'settingsColor' => $settings['yamli_global_settings']['yamli_setting_settingsColor'],
  	  'settingsLinkColor' => $settings['yamli_global_settings']['yamli_setting_settingsLinkColor'],
  	  'zIndexBase' => $settings['yamli_global_settings']['yamli_setting_zIndexBase']
  	);
  	
  	$json = drupal_to_js($global_settings);
  	$render_script = '';
  	foreach ($ids as $id) {
  	  if ($id) {
  	  	$render_script .= "Yamli.yamlify(\"".trim($id)."\");\n";
  	  }
  	}
    foreach ($classes as $class) {
      if ($class) {
      	$render_script .= "Yamli.yamlifyClass(\"".trim($class)."\");\n";
      }
    }
  	$output .= "<script type=\"text/javascript\">\nif (typeof(Yamli) == \"object\" && Yamli.init($json))\n{\n$render_script\n}\n</script>\n";
  	$output .= "<!-- YAMLI CODE END -->\n";
  	return $output;
	}
}// end function yamli_footer;
